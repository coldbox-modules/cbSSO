/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    implementation "org.opensaml:opensaml-core:$opensamlVersion"
    implementation "org.opensaml:opensaml-saml-impl:$opensamlVersion"
    implementation "org.opensaml:opensaml-soap-api:$opensamlVersion"
    implementation "org.opensaml:opensaml-xmlsec-api:$opensamlVersion"
    implementation "org.opensaml:opensaml-security-api:$opensamlVersion"
    implementation "org.opensaml:opensaml-security-impl:$opensamlVersion"
    implementation "org.opensaml:opensaml-profile-api:$opensamlVersion"

    implementation "org.slf4j:slf4j-api:1.7.36"
    implementation "org.slf4j:slf4j-simple:1.7.36"
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'cbsso.opensaml.App'
}

jar {
    archiveBaseName = "cbsso-opensaml"
}

shadowJar {
	archiveBaseName = "cbsso-opensaml"
    mergeServiceFiles()
	minimize{
        exclude( dependency( "org.opensaml:opensaml-core:.*" ) )
        exclude( dependency( "org.slf4j:.*:.*" ) )
        exclude( dependency( "org.opensaml:opensaml-saml-impl:.*" ) )
        exclude( dependency( "org.opensaml:opensaml-soap-api:.*" ) )
        exclude( dependency( "org.opensaml:opensaml-xmlsec-api:.*" ) )
        exclude( dependency( "org.opensaml:opensaml-security-api:.*" ) )
        exclude( dependency( "org.opensaml:opensaml-security-impl:.*" ) )
        exclude( dependency( "org.opensaml:opensaml-profile-api:.*" ) )
	}
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
